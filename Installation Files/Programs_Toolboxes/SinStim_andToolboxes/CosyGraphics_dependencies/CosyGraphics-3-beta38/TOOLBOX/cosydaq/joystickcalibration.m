function joystickcalibration(AdaptorName,BoardName,Channels,ButtonLines)
% JOYSTICKCALIBRATION  Calibration program for analog joystick.
%    JOYSTICKCALIBRATION(AdaptorName,BoardName,Channels,ButtonLines)
%
% Example: Calibration of Benoit Gerard's fMRI joystick #1:
%    joystickcalibration('nidaq', '', 0:1, 0:1);
%
%    The procedure ends by printing the following lines of code to be copy/pasted in your experimental script:
%       JoystickCalib.X.SensorRange = [-1.265 3.491]; % (Line automatically generated by JOYSTICKCALIBRATION)  
%       JoystickCalib.Y.SensorRange = [-1.372 3.531]; % (Line automatically generated by JOYSTICKCALIBRATION)  
%       JoystickCalib.ButtonsInverted = 1; % (Line automatically generated by JOYSTICKCALIBRATION)

%% Param
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NbOfRepetitions = 3; % Use 3 to be able to compute a median
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% Init
ai = openanaloginput(AdaptorName, BoardName, Channels, 1000, 60);
dio = opendigitalio(AdaptorName, BoardName, ButtonLines, []);

%% Take 3 Measures
for i = 1 : NbOfRepetitions
    fprintf('\nMeasure %d (on 3):\n', i);
    
    % Calib zero:
    start(ai);
    input('Let the joystick in it압 central position, then press ENTER...');
    trigger(ai);
    pause(.5);
    if i == 1
        % Buttons
        if ~isempty(ButtonLines)
            b = getvalue(dio);
            if     all(b==1), ButtonsInverted = 1;
            elseif all(b==0), ButtonsInverted = 0;
            else error(['Buttons in different states:  [' num2str(b) '].  Don앖 know what to do.'])
            end
        else
            ButtonsInverted = 0;
        end
    end
    stop(ai);
    XY = getdata(ai, ai.SamplesAcquired);
    xy = median(XY);
    center(i,:) = xy;
    fprintf('x: %1.3f V \n', xy(1));
    fprintf('y: %1.3f V \n', xy(2));
    
    % Calib extremes:
    start(ai);
    pause(.050);
    trigger(ai);
    input('Make a few turns with the joystick at it압 extreme range, then press ENTER...');
    stop(ai);
    XY = getdata(ai, ai.SamplesAcquired);
    mins(i,:)  = min(XY);
    maxes(i,:) = max(XY);
    fprintf('x: %1.3f to %1.3f V \n', mins(i,1), maxes(i,1));
    fprintf('y: %1.3f to %1.3f V \n', mins(i,2), maxes(i,2));
    disp(' ')
    
end

%% Compute calib values
disp(' ')
disp('Calibrating...')

x0 = median(center(:,1));
y0 = median(center(:,2));
xMin = median(mins(:,1));
xMax = median(maxes(:,1));
yMin = median(mins(:,2));
yMax = median(maxes(:,2));

xPolarity = 1; % <TODO>
yPolarity = 1; % <TODO>

if xPolarity > 0
    xRange = [xMin xMax];
else
    xRange = [xMax xMin];
end
if yPolarity > 0
    yRange = [yMin yMax];
else
    yRange = [yMax yMin];
end


%% Correct offset to have exactly (0,0) in the center position:
xRange = xRange - mean(xRange) + x0;
yRange = yRange - mean(yRange) + y0;


%% Calibrate:
ch = ai.Channel;
ch(1).SensorRange = xRange;
ch(2).SensorRange = yRange;
ch(1).UnitsRange = [-1 1];
ch(2).UnitsRange = [-1 1];
disp(ch);


%% Verify calibration
disp(' ')
disp('Verifying calibration:')
disp(' ')

i = 1; % just because I made a copy/paste of th ecode above... (I know... it's bad...)

% Calib zero:
start(ai);
r = input('Let the joystick in it압 central position, then press ENTER...');
trigger(ai);
pause(.5);
stop(ai);
XY = getdata(ai, ai.SamplesAcquired);
xy = median(XY);
center(i,:) = xy;
fprintf('x: %1.3f V \n', xy(1));
fprintf('y: %1.3f V \n', xy(2));

% Calib extremes:
start(ai);
pause(.050);
trigger(ai);
r = input('Make a few turns with the joystick at it압 extreme range, then press ENTER...');
stop(ai);
XY = getdata(ai, ai.SamplesAcquired);
mins(i,:)  = min(XY);
maxes(i,:) = max(XY);
fprintf('x: %1.3f to %1.3f V \n', mins(i,1), maxes(i,1));
fprintf('y: %1.3f to %1.3f V \n', mins(i,2), maxes(i,2));
disp(' ')


%% Close
closeanaloginput;
stop(dio);
delete(dio);
disp(' ')

%% Print Calibration Code
disp(' ')
disp('Calibration terminated. Here is the "JoystickCalib" structure to be passed as argument to OPENANALOGJOYSICK:')
disp(' ')
fprintf('JoystickCalib.X.SensorRange = [%1.3f %1.3f]; %% (Line automatically generated by JOYSTICKCALIBRATION)  \n', xRange(1), xRange(2));
fprintf('JoystickCalib.Y.SensorRange = [%1.3f %1.3f]; %% (Line automatically generated by JOYSTICKCALIBRATION)  \n', yRange(1), yRange(2));
fprintf('JoystickCalib.ButtonsInverted = %d; %% (Line automatically generated by JOYSTICKCALIBRATION)  \n', ButtonsInverted);

